var documenterSearchIndex = {"docs":
[{"location":"api/#API","page":"API","title":"API","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"CurrentModule = ClimateMachineCore","category":"page"},{"location":"api/#DataLayouts","page":"API","title":"DataLayouts","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"DataLayouts\nDataLayouts.IJFH","category":"page"},{"location":"api/#ClimateMachineCore.DataLayouts","page":"API","title":"ClimateMachineCore.DataLayouts","text":"ClimateMachineCore.DataLayouts\n\nNotation:\n\ni,j are horizontal node indices within an element\nk is the vertical node index within an element\nv is the vertical element index in a stack\nh is the element stack index\nf is the field index\n\nData layout is specified by the order in which they appear, e.g. IJKFVH indexes the underlying array as [i,j,k,f,v,h]\n\n\n\n\n\n","category":"module"},{"location":"api/#ClimateMachineCore.DataLayouts.IJFH","page":"API","title":"ClimateMachineCore.DataLayouts.IJFH","text":"IJFH{S,Nij}(ArrayType, nelements)\n\nConstruct an IJFH structure given the backing ArrayType, quadrature degrees of freedom Nij, and the number of mesh elements nelements.\n\n\n\n\n\n","category":"type"},{"location":"api/#Meshes","page":"API","title":"Meshes","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"Meshes.EquispacedRectangleMesh","category":"page"},{"location":"api/#ClimateMachineCore.Meshes.EquispacedRectangleMesh","page":"API","title":"ClimateMachineCore.Meshes.EquispacedRectangleMesh","text":"EquispacedRectangleMesh(domain::RectangleDomain, n1::Integer, n2::Integer)\n\nA regular AbstractMesh of domain with n1 elements in dimension 1, and n2 in dimension 2.\n\n\n\n\n\n","category":"type"},{"location":"api/#Geometry","page":"API","title":"Geometry","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"Geometry.Cartesian12Vector","category":"page"},{"location":"api/#ClimateMachineCore.Geometry.Cartesian12Vector","page":"API","title":"ClimateMachineCore.Geometry.Cartesian12Vector","text":"Cartesian12Vector\n\nA vector point value represented by its first 2 cartesian coordinates.\n\n\n\n\n\n","category":"type"},{"location":"api/#Topologies","page":"API","title":"Topologies","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"Topologies","category":"page"},{"location":"api/#ClimateMachineCore.Topologies","page":"API","title":"ClimateMachineCore.Topologies","text":"ClimateMachineCore.Topologies\n\nObjects describing the horizontal connections between elements.\n\nAll elements are quadrilaterals, using the face and vertex numbering convention from p4est:\n\n          4\n      3-------4\n ^    |       |\n |  1 |       | 2\nx2    |       |\n      1-------2\n          3\n        x1-->\n\n\n\n\n\n","category":"module"},{"location":"api/#Spaces","page":"API","title":"Spaces","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"Spaces\nSpaces.Quadratures.degrees_of_freedom\nSpaces.Quadratures.GL\nSpaces.Quadratures.Uniform\nSpaces.Quadratures.quadrature_points\nSpaces.Quadratures.GLL\nSpaces.Quadratures.polynomial_degree\nSpaces.Quadratures.QuadratureStyle","category":"page"},{"location":"api/#ClimateMachineCore.Spaces","page":"API","title":"ClimateMachineCore.Spaces","text":"Meshes\n\ndomain\ntopology\ncoordinates\nmetric terms (inverse partial derivatives)\nquadrature rules and weights\n\nReferences / notes\n\nceed\nQA\n\n\n\n\n\n","category":"module"},{"location":"api/#ClimateMachineCore.Spaces.Quadratures.degrees_of_freedom","page":"API","title":"ClimateMachineCore.Spaces.Quadratures.degrees_of_freedom","text":"degrees_of_freedom(QuadratureStyle) -> Int\n\nReturns the degreesoffreedom of the QuadratureStyle concrete type\n\n\n\n\n\n","category":"function"},{"location":"api/#ClimateMachineCore.Spaces.Quadratures.GL","page":"API","title":"ClimateMachineCore.Spaces.Quadratures.GL","text":"GL{Nq}()\n\nGauss-Legendre quadrature using Nq quadrature points.\n\n\n\n\n\n","category":"type"},{"location":"api/#ClimateMachineCore.Spaces.Quadratures.Uniform","page":"API","title":"ClimateMachineCore.Spaces.Quadratures.Uniform","text":"Uniform{Nq}()\n\nUniformly-spaced quadrature.\n\n\n\n\n\n","category":"type"},{"location":"api/#ClimateMachineCore.Spaces.Quadratures.quadrature_points","page":"API","title":"ClimateMachineCore.Spaces.Quadratures.quadrature_points","text":"points, weights = quadrature_points(::Type{FT}, quadrature_style)\n\nThe points and weights of the quadrature rule in floating point type FT.\n\n\n\n\n\n","category":"function"},{"location":"api/#ClimateMachineCore.Spaces.Quadratures.GLL","page":"API","title":"ClimateMachineCore.Spaces.Quadratures.GLL","text":"GLL{Nq}()\n\nGauss-Legendre-Lobatto quadrature using Nq quadrature points.\n\n\n\n\n\n","category":"type"},{"location":"api/#ClimateMachineCore.Spaces.Quadratures.polynomial_degree","page":"API","title":"ClimateMachineCore.Spaces.Quadratures.polynomial_degree","text":"polynomial_degree(QuadratureStyle) -> Int\n\nReturns the polynomial degree of the QuadratureStyle concrete type\n\n\n\n\n\n","category":"function"},{"location":"api/#ClimateMachineCore.Spaces.Quadratures.QuadratureStyle","page":"API","title":"ClimateMachineCore.Spaces.Quadratures.QuadratureStyle","text":"QuadratureStyle\n\nQuadrature style supertype. See sub-types:\n\nGLL\nGL\nUniform\n\n\n\n\n\n","category":"type"},{"location":"api/#RecursiveApply","page":"API","title":"RecursiveApply","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"RecursiveApply","category":"page"},{"location":"api/#ClimateMachineCore.RecursiveApply","page":"API","title":"ClimateMachineCore.RecursiveApply","text":"RecursiveApply\n\nThis module contains operators to recurse over nested Tuples or NamedTuples.\n\nTo extend to another type T, define RecursiveApply.rmap(fn, args::T...)\n\n\n\n\n\n","category":"module"},{"location":"operators/#Operators","page":"Operators","title":"Operators","text":"","category":"section"},{"location":"operators/","page":"Operators","title":"Operators","text":"CurrentModule = ClimateMachineCore.Operators","category":"page"},{"location":"operators/#Finite-difference-operators","page":"Operators","title":"Finite difference operators","text":"","category":"section"},{"location":"operators/#Interpolation-operators","page":"Operators","title":"Interpolation operators","text":"","category":"section"},{"location":"operators/","page":"Operators","title":"Operators","text":"InterpolateC2F\nInterpolateF2C\nUpwindLeftC2F\nSetBoundaryOperator","category":"page"},{"location":"operators/#ClimateMachineCore.Operators.InterpolateC2F","page":"Operators","title":"ClimateMachineCore.Operators.InterpolateC2F","text":"InterpolateC2F(;boundaries..)\n\nInterpolate from center to face. Supported boundary conditions are:\n\nSetValue(val): set the value at the boundary face to be val.\nSetGradient: set the value at the boundary such that the gradient is val.\nExtrapolate: use the closest interior point as the boundary value\n\n\n\n\n\n","category":"type"},{"location":"operators/#ClimateMachineCore.Operators.InterpolateF2C","page":"Operators","title":"ClimateMachineCore.Operators.InterpolateF2C","text":"InterpolateF2C()\n\nInterpolate from face to center mesh. No boundary conditions are required (or supported).\n\n\n\n\n\n","category":"type"},{"location":"operators/#ClimateMachineCore.Operators.SetBoundaryOperator","page":"Operators","title":"ClimateMachineCore.Operators.SetBoundaryOperator","text":"SetBoundaryOperator(;boundaries...)\n\nThis operator only modifies the values at the boundary:\n\nSetValue(val): set the value to be val on the boundary.\n\n\n\n\n\n","category":"type"},{"location":"operators/#Gradient-operators","page":"Operators","title":"Gradient operators","text":"","category":"section"},{"location":"operators/","page":"Operators","title":"Operators","text":"GradientF2C\nGradientC2F","category":"page"},{"location":"operators/#ClimateMachineCore.Operators.GradientF2C","page":"Operators","title":"ClimateMachineCore.Operators.GradientF2C","text":"GradientF2C(;boundaryname=boundarycondition...)\n\nCentered-difference gradient operator from a FaceFiniteDifferenceSpace to a CenterFiniteDifferenceSpace, applying the relevant boundary conditions. These can be:\n\nby default, the current value at the boundary face will be used.\nSetValue(val): calculate the gradient assuming the value at the boundary is val.\nExtrapolate(): set the value at the center closest to the boundary to be the same as the neighbouring interior value.\n\n\n\n\n\n","category":"type"},{"location":"operators/#ClimateMachineCore.Operators.GradientC2F","page":"Operators","title":"ClimateMachineCore.Operators.GradientC2F","text":"GradientC2F(;boundaries)\n\nCentered-difference gradient operator from a CenterFiniteDifferenceSpace to a FaceFiniteDifferenceSpace, applying the relevant boundary conditions. These can be:\n\nSetValue(val): calculate the gradient assuming the value at the boundary is val.\nSetGradient(val): set the value of the gradient at the boundary to be val.\n\n\n\n\n\n","category":"type"},{"location":"operators/#Boundary-conditions","page":"Operators","title":"Boundary conditions","text":"","category":"section"},{"location":"operators/","page":"Operators","title":"Operators","text":"SetValue\nSetGradient\nExtrapolate","category":"page"},{"location":"operators/#ClimateMachineCore.Operators.SetValue","page":"Operators","title":"ClimateMachineCore.Operators.SetValue","text":"SetValue(val)\n\nSet the value at the boundary to be val. In the case of gradient operators, this will set the input value from which the gradient is computed.\n\n\n\n\n\n","category":"type"},{"location":"operators/#ClimateMachineCore.Operators.SetGradient","page":"Operators","title":"ClimateMachineCore.Operators.SetGradient","text":"SetGradient(val)\n\nSet the gradient at the boundary to be val. In the case of gradient operators this will set the output value of the gradient.\n\n\n\n\n\n","category":"type"},{"location":"operators/#ClimateMachineCore.Operators.Extrapolate","page":"Operators","title":"ClimateMachineCore.Operators.Extrapolate","text":"Extrapolate()\n\nSet the value at the boundary to be the same as the closest interior point.\n\n\n\n\n\n","category":"type"},{"location":"#ClimateMachineCore.jl","page":"Home","title":"ClimateMachineCore.jl","text":"","category":"section"}]
}
