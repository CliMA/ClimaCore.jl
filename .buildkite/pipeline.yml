agents:
  queue: central
  slurm_mem: 8G
  modules: julia/1.8.5 ucx/1.13.1_cuda-11.2 cuda/11.2 openmpi/4.1.5_cuda-11.2 hdf5/1.12.2-ompi415 nsight-systems/2022.2.1

env:
  JULIA_LOAD_PATH: "${JULIA_LOAD_PATH}:${BUILDKITE_BUILD_CHECKOUT_PATH}/.buildkite"
  JULIA_CUDA_USE_BINARYBUILDER: false
  OPENBLAS_NUM_THREADS: 1
  JULIA_NVTX_CALLBACKS: gc

steps:
  - label: "initialize"
    key: "init_cpu_env"
    command:
      - echo "--- Instantiate project"
      - "julia --project -e 'using Pkg; Pkg.instantiate(;verbose=true); Pkg.precompile(;strict=true)'"
      # force the initialization of the CUDA runtime as it is lazily loaded by default
      - "julia --project -e 'using CUDA; CUDA.precompile_runtime()'"

      - echo "--- Instantiate test"
      - "julia --project=test -e 'using Pkg; Pkg.develop(path=\".\"); Pkg.instantiate(;verbose=true); Pkg.precompile(;strict=true)'"

      - echo "--- Instantiate lib/ClimaCoreTempestRemap"
      - "julia --project=lib/ClimaCoreTempestRemap -e 'using Pkg; Pkg.develop(path=\".\"); Pkg.instantiate(;verbose=true); Pkg.precompile(;strict=true)'"

      - echo "--- Instantiate perf"
      - "julia --project=perf -e 'using Pkg; Pkg.instantiate(;verbose=true); Pkg.precompile(;strict=true)'"

      - echo "--- Instantiate examples"
      - "julia --project=examples -e 'using Pkg; Pkg.instantiate(;verbose=true); Pkg.precompile(;strict=true)'"

      - echo "--- Instantiate benchmarks"
      - "julia --project=benchmarks/bickleyjet -e 'using Pkg; Pkg.instantiate(;verbose=true); Pkg.precompile(;strict=true)'"

      - echo "--- Instantiate status"
      - "julia --project -e 'using Pkg; Pkg.status()'"

    agents:
      slurm_cpus_per_task: 8
    env:
      JULIA_NUM_PRECOMPILE_TASKS: 8

  - wait

  - group: "Unit tests"
    steps:

      - label: ":computer: unit tests"
        key: "cpu_unittests"
        command:
          - "julia --color=yes --check-bounds=yes --project=test test/runtests.jl"

      - label: ":computer: unit tests expensive"
        key: "cpu_unittests_expensive"
        command:
          - "julia --color=yes --check-bounds=yes --project=test test/runtests_expensive.jl"
        env:
          OMPI_MCA_rmaps_base_oversubscribe: 1

      - label: ":computer: Field broadcast performance"
        key: "cpu_field_perf"
        command:
          - "julia --color=yes --project=test test/Fields/field_opt.jl"

      - label: ":flower_playing_cards: unit tests"
        key: "gpu_unittests"
        command:
          - "julia --project -e 'using CUDA; CUDA.versioninfo()'"
          - "julia --color=yes --check-bounds=yes --project=test test/runtests.jl CUDA"
        agents:
          slurm_gres: "gpu:1"

      - label: ":computer: test implicit_stencil Float32"
        key: "cpu_implicit_stencil_float32"
        command:
          - "julia -O0 --color=yes --check-bounds=yes --project=test test/Operators/finitedifference/implicit_stencils.jl --float_type Float32"
        agents:
          slurm_time: 2:00:00

      - label: ":computer: test implicit_stencil Float64"
        key: "cpu_implicit_stencil_float64"
        command:
          - "julia -O0 --color=yes --check-bounds=yes --project=test test/Operators/finitedifference/implicit_stencils.jl --float_type Float64"
        agents:
          slurm_time: 2:00:00

      - label: ":computer: test implicit_stencil opt"
        key: "cpu_implicit_stencil_opt"
        command:
          - "julia --color=yes --check-bounds=yes --project=test test/Operators/finitedifference/opt_implicit_stencils.jl"

      - label: ":computer: Column performance benchmarks"
        key: "cpu_column_perf_bm"
        command:
          - "julia --color=yes --project=test test/Operators/finitedifference/column_benchmark.jl"
        agents:
        soft_fail:
          - exit_status: 1

      - label: ":rocket::computer: Axis tensor conversion performance benchmarks"
        key: "cpu_axis_tensor_conversion_perf_bm"
        command:
          - "julia --color=yes --project=test test/Geometry/axistensor_conversion_benchmarks.jl"

      - label: ":computer: Parallel HDF5 IO tests"
        key: "cpu_parallel_hdf5"
        command:
          - "srun julia --color=yes --project=test test/InputOutput/hybrid3dcubedsphere.jl"
        timeout_in_minutes: 5
        env:
          CLIMACORE_DISTRIBUTED: "MPI"
        retry:
          automatic: true
        agents:
          slurm_nodes: 3
          slurm_tasks_per_node: 1

      - label: "TempestRemap MPI testing"
        key: "write_exodus_mpi"
        command:
          - "srun julia --color=yes --project=lib/ClimaCoreTempestRemap lib/ClimaCoreTempestRemap/test/mpi_tests/exodus.jl"
        timeout_in_minutes: 5
        env:
          CLIMACORE_DISTRIBUTED: "MPI"
        retry:
          automatic: true
        agents:
          slurm_nodes: 3
          slurm_tasks_per_node: 1

  - group: "Column examples"
    steps:

      - label: ":computer: Column Heat Diffusion Eq"
        key: "cpu_column_heat"
        command:
          - "julia --color=yes --project=examples examples/column/heat.jl"
        artifact_paths:
          - "examples/column/output/heat/*"

      - label: ":computer: Column Advection Step Eq"
        key: "cpu_column_step_advect"
        command:
          - "julia --color=yes --project=examples examples/column/step.jl"
        artifact_paths:
          - "examples/column/output/advect_step_function/*"

      - label: ":computer: Column Advection Eq"
        key: "cpu_column_advect"
        command:
          - "julia --color=yes --project=examples examples/column/advect.jl"
        artifact_paths:
          - "examples/column/output/advect/*"

      - label: ":computer: Column FCT Advection Eq"
        key: "cpu_fct_column_advect"
        command:
          - "julia --color=yes --project=examples examples/column/fct_advection.jl"
        artifact_paths:
          - "examples/column/output/fct_advection/*"

      - label: ":computer: Column BB FCT Advection Eq"
        key: "cpu_bb_fct_column_advect"
        command:
          - "julia --color=yes --check-bounds=yes --project=examples examples/column/bb_fct_advection.jl"
        artifact_paths:
          - "examples/column/output/bb_fct_advection/*"

      - label: ":computer: Column Zalesak FCT Advection Eq"
        key: "cpu_zalesak_fct_column_advect"
        command:
          - "julia --color=yes --check-bounds=yes --project=examples examples/column/zalesak_fct_advection.jl"
        artifact_paths:
          - "examples/column/output/zalesak_fct_advection/*"

      - label: ":computer: Column Advection Diffusion Eq"
        key: "cpu_column_advect_diff"
        command:
          - "julia --color=yes --project=examples examples/column/advect_diffusion.jl"
        artifact_paths:
          - "examples/column/output/advect_diffusion/*"

      - label: ":computer: Column Ekman Eq"
        key: "cpu_column_ekman"
        command:
          - "julia --color=yes --project=examples examples/column/ekman.jl"
        artifact_paths:
          - "examples/column/output/ekman/*"

      - label: ":computer: Column Hydrostatic Ekman Eq"
        key: "cpu_column_hydrostatic_ekman"
        command:
          - "julia --color=yes --project=examples examples/column/hydrostatic_ekman.jl"
        artifact_paths:
          - "examples/column/output/hydrostatic_ekman/*"

      - label: ":computer: Column Wave Eq"
        key: "cpu_column_wave"
        command:
          - "julia --color=yes --project=examples examples/column/wave.jl"
        artifact_paths:
          - "examples/column/output/wave/*"

      - label: ":computer: Column Hydrostatic Balance Eq"
        key: "cpu_column_hydrostatic"
        command:
          - "julia --color=yes --project=examples examples/column/hydrostatic.jl"
        artifact_paths:
          - "examples/column/output/hydrostatic/*"

      - label: ":computer: Column Hydrostatic Balance Eq with discretely balanced initial condition"
        key: "cpu_column_hydrostatic_discrete"
        command:
          - "julia --color=yes --project=examples examples/column/hydrostatic_discrete.jl"
        artifact_paths:
          - "examples/column/output/hydrostatic_discrete/*"

      - label: ":computer: Column Hydrostatic Balance Eq - implicit"
        key: "cpu_column_hydrostatic_implicit"
        command:
          - "julia --color=yes --project=examples examples/column/hydrostatic_implicit.jl"
        artifact_paths:
          - "examples/column/output/hydrostatic_implicit/*"
        soft_fail:
          - exit_status: 1

  - group: "Spectral element"
    steps:
      - label: ":computer: Bickley jet CG"
        key: "cpu_bickleyjet_cg"
        command:
          - "julia --color=yes --project=examples examples/bickleyjet/bickleyjet_cg.jl"
        artifact_paths:
          - "examples/bickleyjet/output/cg/*"

      - label: ":computer: Bickley jet CG unstructured mesh"
        key: "cpu_bickleyjet_cg_unsmesh"
        command:
          - "julia --color=yes --project=examples examples/bickleyjet/bickleyjet_cg_unsmesh.jl"
        artifact_paths:
          - "examples/bickleyjet/output/cg_unsmesh/*"

      - label: ":computer: Bickley jet CG vector invariant hyperviscosity"
        key: "cpu_bickleyjet_cg_invariant_hypervisc"
        command:
          - "julia --color=yes --project=examples examples/bickleyjet/bickleyjet_cg_invariant_hypervisc.jl"
        artifact_paths:
          - "examples/bickleyjet/output/cg_invariant_hypervisc/*"

      - label: ":computer: MPI Bickley jet CG vector invariant hyperviscosity"
        key: "cpu_mpi_bickleyjet_cg_invariant_hypervisc"
        command:
          - "srun julia --color=yes --project=examples examples/bickleyjet/bickleyjet_cg_invariant_hypervisc.jl"
        artifact_paths:
          - "examples/bickleyjet/output/cg_invariant_hypervisc/*"
        env:
          CLIMACORE_DISTRIBUTED: "MPI"
        agents:
          slurm_ntasks: 4

      - label: ":computer: Bickley jet DG rusanov"
        key: "cpu_bickleyjet_dg_rusanov"
        command:
          - "julia --color=yes --project=examples examples/bickleyjet/bickleyjet_dg.jl rusanov"
        artifact_paths:
          - "examples/bickleyjet/output/dg_rusanov/*"

      - label: ":computer: Bickley jet DG roe"
        key: "cpu_bickleyjet_dg_roe"
        command:
          - "julia --color=yes --project=examples examples/bickleyjet/bickleyjet_dg.jl roe"
        artifact_paths:
          - "examples/bickleyjet/output/dg_roe/*"

      - label: ":computer: Bickley jet DG roe noslip"
        key: "cpu_bickleyjet_dg_roe_noslip"
        command:
          - "julia --color=yes --project=examples examples/bickleyjet/bickleyjet_dg.jl roe noslip"
        artifact_paths:
          - "examples/bickleyjet/output/dg_roe_noslip/*"

      - label: ":computer: Plane limiters advection cosine bells"
        key: "cpu_cg_plane_advection_limiter_cosine_bells"
        command:
          - "julia --color=yes --project=examples examples/plane/limiters_advection.jl"
        artifact_paths:
          - "examples/plane/output/plane_advection_limiter_cosine_bells_D0/*"

      - label: ":computer: Plane limiters advection Gaussian bells"
        key: "cpu_cg_plane_advection_limiter_gaussian_bells"
        command:
          - "julia --color=yes --project=examples examples/plane/limiters_advection.jl gaussian_bells"
        artifact_paths:
          - "examples/plane/output/plane_advection_limiter_gaussian_bells_D0/*"

      - label: ":computer: Plane limiters advection cylinders"
        key: "cpu_cg_plane_advection_limiter_cylinders"
        command:
          - "julia --color=yes --project=examples examples/plane/limiters_advection.jl cylinders"
        artifact_paths:
          - "examples/plane/output/plane_advection_limiter_cylinders_D0/*"

  - group: "Distributed CUDA DSS tests"
    steps:

      - label: ":flower_playing_cards: dss 2-process test"
        key: "gpu_ddss2_test"
        command:
          - "julia --project -e 'using CUDA; CUDA.versioninfo()'"
          - "srun julia --color=yes --check-bounds=yes --project=test test/Spaces/distributed_cuda/ddss2.jl"
        timeout_in_minutes: 5
        env:
          CLIMACORE_DISTRIBUTED: "MPI"
          JULIA_CUDA_MEMORY_POOL: "none"
        agents:
          slurm_ntasks: 2
          slurm_gpus: 2

      - label: ":flower_playing_cards: dss 3-process test"
        key: "gpu_ddss3_test"
        command:
          - "julia --project -e 'using CUDA; CUDA.versioninfo()'"
          - "srun julia --color=yes --check-bounds=yes --project=test test/Spaces/distributed_cuda/ddss3.jl"
        timeout_in_minutes: 5
        env:
          CLIMACORE_DISTRIBUTED: "MPI"
          JULIA_CUDA_MEMORY_POOL: "none"
        agents:
          slurm_ntasks: 3
          slurm_gpus: 3

      - label: ":flower_playing_cards: dss 4-process test"
        key: "gpu_ddss4_test"
        command:
          - "julia --project -e 'using CUDA; CUDA.versioninfo()'"
          - "srun julia --color=yes --check-bounds=yes --project=test test/Spaces/distributed_cuda/ddss4.jl"
        timeout_in_minutes: 5
        env:
          CLIMACORE_DISTRIBUTED: "MPI"
          JULIA_CUDA_MEMORY_POOL: "none"
        agents:
          slurm_ntasks: 4
          slurm_gpus: 4

      - label: ":flower_playing_cards: Cubed Sphere dss 4-process test"
        key: "gpu_ddss4_cs_test"
        command:
          - "julia --project -e 'using CUDA; CUDA.versioninfo()'"
          - "srun julia --color=yes --check-bounds=yes --project=test test/Spaces/ddss4_cs.jl"
        timeout_in_minutes: 5
        env:
          CLIMACORE_DISTRIBUTED: "MPI"
          JULIA_CUDA_MEMORY_POOL: "none"
        agents:
          slurm_ntasks: 4
          slurm_gpus: 4

  - group: "Hybrid examples"
    steps:

      - label: ":computer: 3D Box limiters advection cosine bells"
        key: "cpu_box_advection_limiter_cosine_bells"
        command:
          - "julia --color=yes --project=examples examples/hybrid/box/limiters_advection.jl"
        artifact_paths:
          - "examples/hybrid/box/output/box_advection_limiter_cosine_bells_D0/*"

      - label: ":computer: 3D Box limiters advection Gaussian bells"
        key: "cpu_box_advection_limiter_gaussian_bells"
        command:
          - "julia --color=yes --project=examples examples/hybrid/box/limiters_advection.jl gaussian_bells"
        artifact_paths:
          - "examples/hybrid/box/output/box_advection_limiter_gaussian_bells_D0/*"

      - label: ":computer: 3D Box limiters advection slotted spheres"
        key: "cpu_box_advection_limiter_slotted_spheres"
        command:
          - "julia --color=yes --project=examples examples/hybrid/box/limiters_advection.jl slotted_spheres"
        artifact_paths:
          - "examples/hybrid/box/output/box_advection_limiter_slotted_spheres_D0/*"

      - label: ":computer: Rising Bubble 2D hybrid (ρθ)"
        key: "cpu_rising_bubble_2d_hybrid_rhotheta"
        command:
          - "julia --color=yes --project=examples examples/hybrid/plane/bubble_2d_rhotheta.jl"
        artifact_paths:
          - "examples/hybrid/plane/output/bubble_2d_rhotheta/*"
      
      - label: ":computer: Isothermal channel flow 2D hybrid (ρe)"
        key: "cpu_isothermal_channel_2d_hybrid_rhoe"
        command:
          - "julia --color=yes --project=examples examples/hybrid/plane/isothermal_channel.jl"
        artifact_paths:
          - "examples/hybrid/plane/output/iso_channel_2d/*"

      - label: ":computer: Rising Bubble 3D hybrid (ρθ)"
        key: "cpu_rising_bubble_3d_hybrid_rhotheta"
        command:
          - "julia --color=yes --project=examples examples/hybrid/box/bubble_3d_rhotheta.jl"
        artifact_paths:
          - "examples/hybrid/box/output/bubble_3d_rhotheta/*"

      - label: ":computer: Rising Bubble 2D hybrid invariant (ρθ)"
        key: "cpu_rising_bubble_2d_hybrid_invariant_rhotheta"
        command:
          - "julia --color=yes --project=examples examples/hybrid/plane/bubble_2d_invariant_rhotheta.jl"
        artifact_paths:
          - "examples/hybrid/plane/output/bubble_2d_invariant_rhotheta/*"

      - label: ":computer: Rising Bubble 2D hybrid invariant (ρe)"
        key: "cpu_rising_bubble_2d_hybrid_invariant_rhoe"
        command:
          - "julia --color=yes --project=examples examples/hybrid/plane/bubble_2d_invariant_rhoe.jl"
        artifact_paths:
          - "examples/hybrid/plane/output/bubble_2d_invariant_rhoe/*"

      - label: ":computer: Rising Bubble 3D hybrid invariant (ρθ)"
        key: "cpu_rising_bubble_3d_hybrid_invariant_rhotheta"
        command:
          - "julia --color=yes --project=examples examples/hybrid/box/bubble_3d_invariant_rhotheta.jl"
        artifact_paths:
          - "examples/hybrid/box/output/bubble_3d_invariant_rhotheta/*"

      - label: ":computer: Rising Bubble 3D hybrid invariant (ρe)"
        key: "cpu_rising_bubble_3d_hybrid_invariant_rhoe"
        command:
          - "julia --color=yes --project=examples examples/hybrid/box/bubble_3d_invariant_rhoe.jl"
        artifact_paths:
          - "examples/hybrid/box/output/bubble_3d_invariant_rhoe/*"

      - label: ":computer: Density current 2D hybrid invariant total energy"
        key: "cpu_density_current_2d_hybrid_invariant_total_energy"
        command:
          - "julia --color=yes --project=examples examples/hybrid/plane/density_current_2dinvariant_rhoe.jl"
        artifact_paths:
          - "examples/hybrid/plane/output/dc_invariant_etot/*"

      - label: ":computer: Density current 2D hybrid invariant total energy (topography mesh interface)"
        key: "cpu_density_current_2d_hybrid_invariant_total_energy_no-warp_topography"
        command:
          - "julia --color=yes --project=examples examples/hybrid/plane/topo_dc_2dinvariant_rhoe.jl"
        artifact_paths:
          - "examples/hybrid/plane/output/dc_invariant_etot_topo/*"

      - label: ":computer: Nonhydrostatic Agnesi Mountain total energy (topography mesh interface)"
        key: "cpu_agnesi_mtn_2d_hybrid_invariant_total_energy_topography"
        command:
          - "julia --color=yes --project=examples examples/hybrid/plane/topo_agnesi_nh.jl"
        artifact_paths:
          - "examples/hybrid/plane/output/agnesi_etot_nh/*"

      - label: ":computer: Schar Mountain total energy (topography mesh interface)"
        key: "cpu_schaer_mtn_2d_hybrid_invariant_total_energy_topography"
        command:
          - "julia --color=yes --project=examples examples/hybrid/plane/topo_schar_nh.jl"
        artifact_paths:
          - "examples/hybrid/plane/output/schar_etot_nh/*"

      - label: ":computer: Density current 2D hybrid invariant potential temperature"
        key: "cpu_density_current_2d_hybrid_invariant_potential_temperature"
        command:
          - "julia --color=yes --project=examples examples/hybrid/plane/density_current_2dinvariant_rhotheta.jl"
        artifact_paths:
          - "examples/hybrid/plane/output/dc_rhotheta/*"

      - label: ":computer: Density current 2D hybrid conservative form potential temperature"
        key: "cpu_density_current_2d_hybrid_conservative_potential_temperature"
        command:
          - "julia --color=yes --project=examples examples/hybrid/plane/density_current_2d_flux_form.jl"
        artifact_paths:
          - "examples/hybrid/plane/output/dc_fluxform/*"

      - label: ":computer: MPI Rising Bubble 3D hybrid invariant (ρe)"
        key: "cpu_mpi_rising_bubble_3d_hybrid_invariant_rhoe"
        command:
          - "srun julia --color=yes --project=examples examples/hybrid/box/bubble_3d_invariant_rhoe.jl"
        artifact_paths:
          - "examples/hybrid/box/output/bubble_3d_invariant_rhoe/*"
        env:
          CLIMACORE_DISTRIBUTED: "MPI"
        agents:
          slurm_ntasks: 2

  - group: "Sphere examples"
    steps:

      - label: ":computer: Solid body sphere cosine bell alpha0"
        key: "cpu_solidbody_cg_sphere_cosine_bell_alpha0"
        command:
          - "julia --color=yes --project=examples examples/sphere/solidbody.jl"
        artifact_paths:
          - "examples/sphere/output/cg_sphere_solidbody_cosine_bell_alpha0/*"

      - label: ":computer: Solid body sphere cosine bell alpha45"
        key: "cpu_solidbody_cg_sphere_cosine_bell_alpha45"
        command:
          - "julia --color=yes --project=examples examples/sphere/solidbody.jl cosine_bell alpha45"
        artifact_paths:
          - "examples/sphere/output/cg_sphere_solidbody_cosine_bell_alpha45/*"

      - label: ":computer: Solid body sphere Gaussian bell alpha0"
        key: "cpu_solidbody_cg_sphere_gaussian_bell_alpha0"
        command:
          - "julia --color=yes --project=examples examples/sphere/solidbody.jl gaussian_bell"
        artifact_paths:
          - "examples/sphere/output/cg_sphere_solidbody_gaussian_bell_alpha0/*"

      - label: ":computer: Solid body sphere Gaussian bell alpha45"
        key: "cpu_solidbody_cg_sphere_gaussian_bell_alpha45"
        command:
          - "julia --color=yes --project=examples examples/sphere/solidbody.jl gaussian_bell alpha45"
        artifact_paths:
          - "examples/sphere/output/cg_sphere_solidbody_gaussian_bell_alpha45/*"

      - label: ":computer: Sphere limiters advection cosine bells"
        key: "cpu_cg_sphere_advection_limiter_cosine_bells"
        command:
          - "julia --color=yes --project=examples examples/sphere/limiters_advection.jl"
        artifact_paths:
          - "examples/sphere/output/cg_sphere_advection_limiter_cosine_bells/*"

      - label: ":computer: Sphere limiters advection Gaussian bells"
        key: "cpu_cg_advection_limiter_gaussian_bells"
        command:
          - "julia --color=yes --project=examples examples/sphere/limiters_advection.jl gaussian_bells"
        artifact_paths:
          - "examples/sphere/output/cg_sphere_advection_limiter_gaussian_bells/*"

      - label: ":computer: Sphere limiters advection cylinders"
        key: "cpu_cg_advection_limiter_cylinders"
        command:
          - "julia --color=yes --project=examples examples/sphere/limiters_advection.jl cylinders"
        artifact_paths:
          - "examples/sphere/output/cg_sphere_advection_limiter_cylinders/*"

      - label: ":computer: Steady-state shallow water 2D sphere alpha0"
        key: "cpu_shallowwater_2d_cg_sphere_alpha0"
        command:
          - "julia --color=yes --project=examples examples/sphere/shallow_water.jl"
        artifact_paths:
          - "examples/sphere/output/cg_sphere_shallowwater_steady_state_alpha0/*"

      - label: ":computer: Shallow-water 2D sphere steady-state alpha45"
        key: "cpu_shallowwater_2d_cg_sphere_alpha45"
        command:
          - "julia --color=yes --project=examples examples/sphere/shallow_water.jl steady_state alpha45"
        artifact_paths:
          - "examples/sphere/output/cg_sphere_shallowwater_steady_state_alpha45/*"

      - label: ":computer: Shallow-water 2D sphere steady-state with compact support alpha0"
        key: "cpu_shallowwater_2d_cg_sphere_compact_alpha0"
        command:
          - "julia --color=yes --project=examples examples/sphere/shallow_water.jl steady_state_compact"
        artifact_paths:
          - "examples/sphere/output/cg_sphere_shallowwater_steady_state_compact_alpha0/*"

      - label: ":computer: Shallow-water 2D sphere steady-state with compact support alpha60"
        key: "cpu_shallowwater_2d_cg_sphere_compact_alpha60"
        command:
          - "julia --color=yes --project=examples examples/sphere/shallow_water.jl steady_state_compact alpha60"
        artifact_paths:
          - "examples/sphere/output/cg_sphere_shallowwater_steady_state_compact_alpha60/*"

      - label: ":computer: Shallow-water 2D sphere barotropic instability alpha0"
        key: "cpu_shallowwater_2d_cg_sphere_barotropic_alpha0"
        command:
          - "julia --color=yes --project=examples examples/sphere/shallow_water.jl barotropic_instability"
        artifact_paths:
          - "examples/sphere/output/cg_sphere_shallowwater_barotropic_instability_alpha0/*"

      - label: ":computer: MPI Shallow-water 2D sphere barotropic instability alpha0"
        key: "cpu_mpi_shallowwater_2d_cg_sphere_barotropic_alpha0"
        command:
          - "nsys profile --trace=nvtx,mpi --mpi-impl=openmpi --output=examples/sphere/output/cg_sphere_shallowwater_barotropic_instability_alpha0/report.%q{NPROCS} mpiexec julia --color=yes --project=examples examples/sphere/shallow_water.jl barotropic_instability"
        artifact_paths:
          - "examples/sphere/output/cg_sphere_shallowwater_barotropic_instability_alpha0/*"
        env:
          CLIMACORE_DISTRIBUTED: "MPI"
          NPROCS: 2
        agents:
          slurm_nodes: 1
          slurm_tasks_per_node: 2

      - label: ":computer: Shallow-water 2D sphere barotropic instability alpha30"
        key: "cpu_shallowwater_2d_cg_sphere_barotropic_alpha30"
        command:
          - "julia --color=yes --project=examples examples/sphere/shallow_water.jl barotropic_instability alpha30"
        artifact_paths:
          - "examples/sphere/output/cg_sphere_shallowwater_barotropic_instability_alpha30/*"

      - label: ":computer: Shallow-water 2D sphere mountain alpha0"
        key: "cpu_nonuniform_shallowwater_2d_cg_sphere"
        command:
          - "julia --color=yes --project=examples examples/sphere/shallow_water.jl mountain"
        artifact_paths:
          - "examples/sphere/output/cg_sphere_shallowwater_mountain_alpha0/*"

      - label: ":computer: Shallow-water 2D sphere Rossby Haurwitz"
        key: "cpu_rossbyhaurwitz_2d_cg_sphere"
        command:
          - "julia --color=yes --project=examples examples/sphere/shallow_water.jl rossby_haurwitz"
        artifact_paths:
          - "examples/sphere/output/cg_sphere_shallowwater_rossby_haurwitz_alpha0/*"

      - label: ":flower_playing_cards: CUDA Shallow-water 2D sphere"
        key: "cuda_shallowwater_2d_cg_sphere"
        command:
          - mkdir -p output/$$BUILDKITE_STEP_KEY
          - nsys profile --trace=nvtx,cuda --output=output/$$BUILDKITE_STEP_KEY/report julia --color=yes --project=examples examples/sphere/shallow_water_cuda.jl
        artifact_paths:
          - output/cuda_shallowwater_2d_cg_sphere
        agents:
          slurm_gpus: 1

  - group: "Examples hybrid sphere"
    steps:

      - label: ":computer: 3D sphere deformation flow w/ limiter & FCT"
        key: "cpu_3d_deformation_flow"
        command:
          - "julia --color=yes --project=examples examples/hybrid/sphere/deformation_flow.jl"
        artifact_paths:
          - "examples/hybrid/sphere/output/deformation_flow/*"

      - label: ":computer: 3D sphere Hadley circulation"
        key: "cpu_3d_hadley_circulation"
        command:
          - "julia --color=yes --project=examples examples/hybrid/sphere/hadley_circulation.jl"
        artifact_paths:
          - "examples/hybrid/sphere/output/hadley_circulation/*"

      - label: ":computer: Float 64 3D sphere baroclinic wave (ρe)"
        key: "cpu_baroclinic_wave_rho_e_float64"
        command:
          - "julia --color=yes --project=examples examples/hybrid/driver.jl"
        artifact_paths:
          - "examples/hybrid/sphere/output/baroclinic_wave_rhoe/Float64/*"
        env:
          TEST_NAME: "sphere/baroclinic_wave_rhoe"
          FLOAT_TYPE: "Float64"

      - label: ":computer: 3D sphere baroclinic wave (ρe)"
        key: "cpu_baroclinic_wave_rho_e"
        command:
          - "julia --color=yes --project=examples examples/hybrid/driver.jl"
        artifact_paths:
          - "examples/hybrid/sphere/output/baroclinic_wave_rhoe/Float32/*"
        env:
          TEST_NAME: "sphere/baroclinic_wave_rhoe"

      - label: ":computer: MPI 3D sphere baroclinic wave (ρe)"
        key: "cpu_mpi_baroclinic_wave_rho_e"
        command:
          - "srun julia --color=yes --project=examples examples/hybrid/driver.jl"
        artifact_paths:
          - "examples/hybrid/sphere/output/baroclinic_wave_rhoe/Float32/*"
        env:
          TEST_NAME: "sphere/baroclinic_wave_rhoe"
          CLIMACORE_DISTRIBUTED: "MPI"
        agents:
          slurm_ntasks: 2


      - label: ":computer: 3D sphere baroclinic wave (ρθ)"
        key: "cpu_baroclinic_wave_rho_theta"
        command:
          - "julia --color=yes --project=examples examples/hybrid/driver.jl"
        artifact_paths:
          - "examples/hybrid/sphere/output/baroclinic_wave_rhotheta/Float32/*"
        env:
          TEST_NAME: "sphere/baroclinic_wave_rhotheta"

      - label: ":computer: 3D sphere nonhydrostatic gravity wave"
        key: "cpu_nonhydrostatic_gravity_wave"
        command:
          - "julia --color=yes --project=examples examples/hybrid/sphere/nonhydrostatic_gravity_wave.jl"
        artifact_paths:
          - "examples/hybrid/sphere/output/nonhydrostatic_gravity_wave/*"

      - label: ":computer: 3D sphere solid-body rotation"
        key: "cpu_solid_body_rotation"
        command:
          - "julia --color=yes --project=examples examples/hybrid/sphere/solid_body_rotation_3d.jl"

      - label: ":computer: 3D sphere hydrostatically and geostrophically balanced flow (ρe)"
        key: "cpu_balanced_flow_rho_e"
        command:
          - "julia --color=yes --project=examples examples/hybrid/driver.jl"
        artifact_paths:
          - "examples/hybrid/sphere/output/balanced_flow_rhoe/Float32/*"
        env:
          TEST_NAME: "sphere/balanced_flow_rhoe"

      - label: ":computer: 3D sphere hydrostatically and geostrophically balanced flow (ρθ)"
        key: "cpu_balanced_flow_rho_theta"
        command:
          - "julia --color=yes --project=examples examples/hybrid/driver.jl"
        artifact_paths:
          - "examples/hybrid/sphere/output/balanced_flow_rhotheta/Float32/*"
        env:
          TEST_NAME: "sphere/balanced_flow_rhotheta"

      - label: ":computer: 3D sphere dry Held-Suarez (ρe)"
        key: "cpu_held_suarez_rho_e"
        command:
          - "julia --color=yes --project=examples examples/hybrid/driver.jl"
        artifact_paths:
          - "examples/hybrid/sphere/output/held_suarez_rhoe/Float32/*"
        env:
          TEST_NAME: "sphere/held_suarez_rhoe"

      - label: ":computer: Float64 3D sphere dry Held-Suarez (ρθ)"
        key: "cpu_held_suarez_rho_theta_float64"
        command:
          - "julia --color=yes --project=examples examples/hybrid/driver.jl"
        artifact_paths:
          - "examples/hybrid/sphere/output/held_suarez_rhotheta/Float64/*"
        env:
          TEST_NAME: "sphere/held_suarez_rhotheta"
          FLOAT_TYPE: "Float64"

      - label: ":computer: 3D sphere dry Held-Suarez (ρθ)"
        key: "cpu_held_suarez_rho_theta"
        command:
          - "julia --color=yes --project=examples examples/hybrid/driver.jl"
        artifact_paths:
          - "examples/hybrid/sphere/output/held_suarez_rhotheta/Float32/*"
        env:
          TEST_NAME: "sphere/held_suarez_rhotheta"

      - label: ":computer: 3D sphere dry Held-Suarez (ρe_int)"
        key: "cpu_held_suarez_rho_e_int"
        command:
          - "julia --color=yes --project=examples examples/hybrid/driver.jl"
        artifact_paths:
          - "examples/hybrid/sphere/output/held_suarez_rhoe_int/Float32/*"
        env:
          TEST_NAME: "sphere/held_suarez_rhoe_int"

  - group: "Examples hybrid plane"
    steps:

      - label: ":computer: 2D plane inertial gravity wave"
        key: "cpu_inertial_gravity_wave"
        command:
          - "julia --color=yes --project=examples examples/hybrid/driver.jl"
        artifact_paths:
          - "examples/hybrid/plane/output/inertial_gravity_wave/Float32/*"
        env:
          TEST_NAME: "plane/inertial_gravity_wave"

      - label: ":computer: stretched 2D plane inertial gravity wave"
        key: "cpu_stretch_inertial_gravity_wave"
        command:
          - "julia --color=yes --project=examples examples/hybrid/driver.jl"
        artifact_paths:
          - "examples/hybrid/plane/output/stretched_inertial_gravity_wave/Float32/*"
        env:
          TEST_NAME: "plane/inertial_gravity_wave"
          Z_STRETCH: "true"

  - group: "Analysis"
    steps:

      - label: ":rocket::computer: Allocations analysis"
        key: "cpu_allocations"
        command:
          - "julia --color=yes --project=perf perf/allocs.jl"
        artifact_paths:
          - "perf/allocations_output/*"

      - label: ":rocket::computer: Flamegraph profile"
        key: "cpu_flamegraph"
        depends_on: "cpu_allocations"  # TODO: is this necessary?
        allow_dependency_failure: true # TODO: is this necessary?
        command:
          - "julia --color=yes --project=perf perf/flame.jl"
        artifact_paths:
          - "perf/output/*"

      - label: ":rocket::computer: Benchmark step!"
        key: "cpu_benchmark"
        command:
          - "julia --color=yes --project=perf perf/benchmark.jl"

      - label: ":rocket::computer: Invalidations"
        key: "cpu_invalidations"
        command:
          - "julia --color=yes --project=perf perf/invalidations.jl"
  - wait

  - label: ":chart_with_downwards_trend: build history"
    command:
      - "build_history staging"
    artifact_paths:
      - "build_history.html"
