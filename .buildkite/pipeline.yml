env:
  JULIA_VERSION: "1.6.2"
  CUDA_VERSION: "11.2"
  OPENBLAS_NUM_THREADS: 1

steps:
  - label: "init :computer:"
    key: "init_cpu_env"
    command:
      - "julia --project -e 'using Pkg; Pkg.instantiate(;verbose=true)'"
      - "julia --project -e 'using Pkg; Pkg.precompile(;strict=true)'"

      - "julia --project=test -e 'using Pkg; Pkg.develop(path=\".\"); Pkg.instantiate(;verbose=true)'"
      - "julia --project=test -e 'using Pkg; Pkg.precompile(;strict=true)'"

      - "julia --project=examples/column -e 'using Pkg; Pkg.instantiate(;verbose=true)'"
      - "julia --project=examples/column -e 'using Pkg; Pkg.precompile(;strict=true)'"

      - "julia --project=examples/bickleyjet -e 'using Pkg; Pkg.instantiate(;verbose=true)'"
      - "julia --project=examples/bickleyjet -e 'using Pkg; Pkg.precompile(;strict=true)'"

      - "julia --project=benchmarks/bickleyjet -e 'using Pkg; Pkg.instantiate(;verbose=true)'"
      - "julia --project=benchmarks/bickleyjet -e 'using Pkg; Pkg.precompile(;strict=true)'"

      - "julia --project -e 'using Pkg; Pkg.status()'"
    agents:
      config: cpu
      queue: central
      slurm_ntasks: 1

  - label: "init :flower_playing_cards:"
    key: "init_gpu_env"
    command:
      - "export CUDA_HOME=/usr/local/cuda-$$CUDA_VERSION"

      - "julia --project -e 'using Pkg; Pkg.instantiate(;verbose=true)'"
      - "julia --project -e 'using Pkg; Pkg.precompile(;strict=true)'"

      - "julia --project=test -e 'using Pkg; Pkg.develop(path=\".\"); Pkg.instantiate(;verbose=true)'"
      - "julia --project=test -e 'using Pkg; Pkg.precompile(;strict=true)'"

      # force the initialization of the CUDA runtime as it is lazily loaded by default
      - "julia --project -e 'using CUDA; CUDA.precompile_runtime()'"
      - "julia --project -e 'using CUDA; CUDA.versioninfo()'"

      - "julia --project=benchmarks/bickleyjet -e 'using Pkg; Pkg.instantiate(;verbose=true)'"
      - "julia --project=benchmarks/bickleyjet -e 'using Pkg; Pkg.precompile(;strict=true)'"

      - "julia --project -e 'using Pkg; Pkg.status()'"
    agents:
      config: gpu
      queue: central
      slurm_ntasks: 1
      slurm_gres: "gpu:1"

  - wait

  - label: ":computer: unit tests"
    key: "cpu_unittests"
    command:
      - "julia --color=yes --project=test test/runtests.jl"
    agents:
      config: cpu
      queue: central
      slurm_ntasks: 1

  - label: ":flower_playing_cards: unit tests"
    key: "gpu_unittests"
    command:
      - "export CUDA_HOME=/usr/local/cuda-$$CUDA_VERSION"
      - "julia --color=yes --project=test test/runtests.jl CUDA"
    agents:
      config: gpu
      queue: central
      slurm_ntasks: 1
      slurm_gres: "gpu:1"

  - label: ":computer: Column Heat Diffusion Eq"
    key: "cpu_column_heat"
    command:
      - "julia --color=yes --project=examples/column examples/column/heat.jl"
    artifact_paths:
      - "examples/column/output/heat/*"
    agents:
      config: cpu
      queue: central
      slurm_ntasks: 1

  - label: ":computer: Column Advection Eq"
    key: "cpu_column_advect"
    command:
      - "julia --color=yes --project=examples/column examples/column/advect.jl"
    artifact_paths:
      - "examples/column/output/advect/*"
    agents:
      config: cpu
      queue: central
      slurm_ntasks: 1

  - label: ":computer: Column Advection Diffusion Eq"
    key: "cpu_column_advect_diff"
    command:
      - "julia --color=yes --project=examples/column examples/column/advect_diffusion.jl"
    artifact_paths:
      - "examples/column/output/advect_diffusion/*"
    agents:
      config: cpu
      queue: central
      slurm_ntasks: 1

  - label: ":computer: Column Ekman Eq"
    key: "cpu_column_ekman"
    command:
      - "julia --color=yes --project=examples/column examples/column/ekman.jl"
    artifact_paths:
      - "examples/column/output/ekman/*"
    agents:
      config: cpu
      queue: central
      slurm_ntasks: 1

  - label: ":computer: Column Hydrostatic Ekman Eq"
    key: "cpu_column_hydrostatic_ekman"
    command:
      - "julia --color=yes --project=examples/column examples/column/hydrostatic_ekman.jl"
    artifact_paths:
      - "examples/column/output/hydrostatic_ekman/*"
    agents:
      config: cpu
      queue: central
      slurm_ntasks: 1

  - label: ":computer: Column Wave Eq"
    key: "cpu_column_wave"
    command:
      - "julia --color=yes --project=examples/column examples/column/wave.jl"
    artifact_paths:
      - "examples/column/output/wave/*"
    agents:
      config: cpu
      queue: central
      slurm_ntasks: 1

  - label: ":computer: Column Hydrostatic Balance Eq"
    key: "cpu_column_hydrostatic"
    command:
      - "julia --color=yes --project=examples/column examples/column/hydrostatic.jl"
    artifact_paths:
      - "examples/column/output/hydrostatic/*"
    agents:
      config: cpu
      queue: central
      slurm_ntasks: 1

  - label: ":computer: Column Hydrostatic Balance Eq - implicit"
    key: "cpu_column_hydrostatic_implicit"
    command:
      - "julia --color=yes --project=examples/column examples/column/hydrostatic_implicit.jl"
    artifact_paths:
      - "examples/column/output/hydrostatic_implicit/*"
    agents:
      config: cpu
      queue: central
      slurm_ntasks: 1

  - label: ":computer: Bickley jet CG"
    key: "cpu_bickleyjet_cg"
    command:
      - "julia --color=yes --project=examples/bickleyjet examples/bickleyjet/bickleyjet_cg.jl"
    artifact_paths:
      - "examples/bickleyjet/output/cg/*"
    agents:
      config: cpu
      queue: central
      slurm_ntasks: 1

  - label: ":computer: Bickley jet CG vector invariant"
    key: "cpu_bickleyjet_cg_invariant"
    command:
      - "julia --color=yes --project=examples/bickleyjet examples/bickleyjet/bickleyjet_cg_invariant.jl"
    artifact_paths:
      - "examples/bickleyjet/output/cg_invariant/*"
    agents:
      config: cpu
      queue: central
      slurm_ntasks: 1

  - label: ":computer: Bickley jet CG vector invariant hyperviscosity"
    key: "cpu_bickleyjet_cg_invariant_hypervisc"
    command:
      - "julia --color=yes --project=examples/bickleyjet examples/bickleyjet/bickleyjet_cg_invariant_hypervisc.jl"
    artifact_paths:
      - "examples/bickleyjet/output/cg_invariant_hypervisc/*"
    agents:
      config: cpu
      queue: central
      slurm_ntasks: 1

  - label: ":computer: Bickley jet DG rusanov"
    key: "cpu_bickleyjet_dg_rusanov"
    command:
      - "julia --color=yes --project=examples/bickleyjet examples/bickleyjet/bickleyjet_dg.jl rusanov"
    artifact_paths:
      - "examples/bickleyjet/output/dg_rusanov/*"
    agents:
      config: cpu
      queue: central
      slurm_ntasks: 1

  - label: ":computer: Bickley jet DG roe"
    key: "cpu_bickleyjet_dg_roe"
    command:
      - "julia --color=yes --project=examples/bickleyjet examples/bickleyjet/bickleyjet_dg.jl roe"
    artifact_paths:
      - "examples/bickleyjet/output/dg_roe/*"
    agents:
      config: cpu
      queue: central
      slurm_ntasks: 1

  - label: ":computer: Bickley jet DG roe noslip"
    key: "cpu_bickleyjet_dg_roe_noslip"
    command:
      - "julia --color=yes --project=examples/bickleyjet examples/bickleyjet/bickleyjet_dg.jl roe noslip"
    artifact_paths:
      - "examples/bickleyjet/output/dg_roe_noslip/*"
    agents:
      config: cpu
      queue: central
      slurm_ntasks: 1

  - label: ":flower_playing_cards: Bickley jet DG"
    key: "benchmark_bickleyjet_dg"
    command:
      - "julia --color=yes --project=benchmarks/bickleyjet benchmarks/bickleyjet/core_vs_ref.jl"
    artifact_paths:
      - "benchmarks/bickleyjet/*.png"
    agents:
      config: gpu
      queue: central
      slurm_ntasks: 1
      slurm_gres: "gpu:1"

  - label: ":computer: :fast_forward: Bickley jet DG reference thread scaling"
    key: "cpu_benchmark_bickleyjet_dg_thread_scaling"
    command:
      - "julia --color=yes --project=benchmarks/bickleyjet benchmarks/bickleyjet/ref_thread_scaling.jl"
    artifact_paths:
      - "benchmarks/bickleyjet/*.png"
    agents:
      config: cpu
      queue: central
      slurm_ntasks: 1
      slurm_cpus_per_task: 16
      slurm_exclusive: ""
